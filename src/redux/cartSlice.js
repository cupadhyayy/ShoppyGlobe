import { createSlice } from '@reduxjs/toolkit';

// Initial state of the cart, with an empty array for items
const initialState = {
  items: [],
};

// Create a slice for the cart with actions and reducers
const cartSlice = createSlice({
  name: 'cart', // Name of the slice
  initialState, // Initial state
  reducers: {
    // Action to add a product to the cart
    addToCart: (state, action) => {
      const product = action.payload; // Get the product from the action payload
      const existingItem = state.items.find((item) => item.id === product.id); // Check if the product already exists in the cart

      if (existingItem) {
        // If the product exists, increase its quantity by 1
        existingItem.quantity += 1;
      } else {
        // If the product does not exist, add it with a quantity of 1
        state.items.push({ ...product, quantity: 1 });
      }
    },

    // Action to remove a product from the cart
    removeFromCart: (state, action) => {
      const productId = action.payload; // Get the product ID from the action payload
      // Remove the product from the items array based on the product ID
      state.items = state.items.filter((item) => item.id !== productId);
    },

    // Action to clear all items from the cart
    clearCart: (state) => {
      // Set the items array to an empty array, clearing the cart
      state.items = [];
    },

    // Action to increase the quantity of a specific product
    increaseQuantity: (state, action) => {
      const productId = action.payload; // Get the product ID from the action payload
      const existingItem = state.items.find((item) => item.id === productId); // Find the product in the cart

      if (existingItem) {
        // If the product exists, increase its quantity by 1
        existingItem.quantity += 1;
      }
    },

    // Action to decrease the quantity of a specific product
    decreaseQuantity: (state, action) => {
      const productId = action.payload; // Get the product ID from the action payload
      const existingItem = state.items.find((item) => item.id === productId); // Find the product in the cart

      if (existingItem && existingItem.quantity > 1) {
        // If the product exists and the quantity is greater than 1, decrease its quantity by 1
        existingItem.quantity -= 1;
      }
    },
  },
});

// Export the actions generated by the slice
export const { addToCart, removeFromCart, clearCart, increaseQuantity, decreaseQuantity } = cartSlice.actions;

// Export the reducer to be used in the store
export default cartSlice.reducer;
